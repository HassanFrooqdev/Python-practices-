# 1. Given two dictionaries dict1 = {'a': 5, 'b': 10} and dict2 = {'a': 3, 'b': 7},
# write a Python program to add the values of matching keys and print the result.
dict1 = {'a': 5, 'b': 10}
dict2 = {'a': 3, 'b': 7}

# Create a new dictionary to store the sum of matching keys
result_dict = {key: dict1[key] + dict2[key] for key in dict1 if key in dict2}
print("Sum of matching keys:", result_dict)

# 2. Write a Python program to create a dictionary where the keys are the first n positive integers,
# and the values are their cubes. Take n as user input.
n = int(input("Enter a positive integer n: "))
cubes_dict = {i: i**3 for i in range(1, n + 1)}
print("Cubes Dictionary:", cubes_dict)

# 3. Flatten the following nested dictionary into a single-level dictionary:
# {'a': {'b': 1, 'c': 2}, 'd': {'e': 3, 'f': 4}}  
nested_dict = {'a': {'b': 1, 'c': 2}, 'd': {'e': 3, 'f': 4}}

# Flatten the nested dictionary
flattened_dict = {f"{outer_key}.{inner_key}": value for outer_key, inner_dict in nested_dict.items() for inner_key, value in inner_dict.items()}
print("Flattened Dictionary:", flattened_dict)

# 4. Write a Python program to split a dictionary into two based on whether the values are odd or even.
original_dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4}

# Create two dictionaries for odd and even values
odd_dict = {k: v for k, v in original_dict.items() if v % 2 != 0}
even_dict = {k: v for k, v in original_dict.items() if v % 2 == 0}

print("Odd Dictionary:", odd_dict)
print("Even Dictionary:", even_dict)

# 5. Create a dictionary comprehension to filter out all keys in {'a': 1, 'b': 2, 'c': 3, 'd': 4}
# where the value is less than 3.
filtered_dict = {k: v for k, v in {'a': 1, 'b': 2, 'c': 3, 'd': 4}.items() if v >= 3}
print("Filtered Dictionary (values >= 3):", filtered_dict)